{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:5068\";\nsetAuthorizationBearer();\nfunction saveAccessToken(authResult) {\n  localStorage.setItem(\"access_token\", authResult.token);\n  setAuthorizationBearer();\n}\nfunction setAuthorizationBearer() {\n  const myToken = localStorage.getItem(\"access_token\");\n  if (myToken) axios.defaults.headers.common[\"Authorization\"] = `Bearer ${myToken}`;\n}\naxios.interceptors.response.use(response => {\n  console.log('aaa');\n  return response;\n}, error => {\n  console.log(`ארעה שגיאה!!! קוד שגיאה: ${error.status} , הודעת שגיאה: ${error.response || error.massage}`);\n  return;\n});\nexport default {\n  logout: () => {\n    localStorage.setItem(\"access_token\", \"\");\n  },\n  login: async (userName, password) => {\n    const res = await axios.post(\"/login\", {\n      userName,\n      password\n    });\n    saveAccessToken(res.data);\n  },\n  register: async (userName, password) => {\n    const res = await axios.post(\"/register\", {\n      userName,\n      password\n    });\n    saveAccessToken(res.data);\n  },\n  getLoginUser: () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) return;\n  },\n  getTasks: async () => {\n    const result = await axios.get(`/tasks`);\n    return result.data;\n  },\n  addTask: async name => {\n    const result = await axios.post(`/tasks`, name, {\n      headers: {\n        'Content-Type': 'text/plain' // מציין שה-Body הוא טקסט רגיל\n      }\n    });\n    return result.status;\n  },\n  setCompleted: async (id, isComplete) => {\n    const result = await axios.put(`/tasks/${id}`);\n    return {};\n  },\n  deleteTask: async id => {\n    const result = await axios.delete(`/tasks/${id}`);\n    return result.status;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","setAuthorizationBearer","saveAccessToken","authResult","localStorage","setItem","token","myToken","getItem","headers","common","interceptors","response","use","console","log","error","status","massage","logout","login","userName","password","res","post","data","register","getLoginUser","getTasks","result","get","addTask","name","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["D:/limudim/praktikod/project_3 ToDoList/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = \"http://localhost:5068\";\nsetAuthorizationBearer()\n\nfunction saveAccessToken(authResult){\n  localStorage.setItem(\"access_token\", authResult.token)\n  setAuthorizationBearer()\n}\n\nfunction setAuthorizationBearer(){\n  const myToken = localStorage.getItem(\"access_token\")\n  if(myToken) \n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${myToken}`\n}\n\naxios.interceptors.response.use(\n    response => {\n      console.log('aaa')\n      return response},\n    error => {\n      console.log(`ארעה שגיאה!!! קוד שגיאה: ${error.status} , הודעת שגיאה: ${error.response || error.massage}`)\n      return ;\n    })\n\n\n\nexport default {\n  logout: () => {\n    localStorage.setItem(\"access_token\",\"\")\n  },\n\n  login: async (userName, password) => {\n    const res = await axios.post(\"/login\", {userName, password})\n    saveAccessToken(res.data)\n  },\n\n  register: async (userName, password) => {\n    const res = await axios.post(\"/register\", {userName, password})\n    saveAccessToken(res.data)\n  },\n\n  getLoginUser: () => {\n    const token = localStorage.getItem(\"access_token\")\n    if(token)\n      return \n  },\n\n  getTasks: async () => {\n    const result = await axios.get(`/tasks`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    const result = await axios.post(`/tasks`,name,  {\n      headers: {\n          'Content-Type': 'text/plain', // מציין שה-Body הוא טקסט רגיל\n      },\n  });\n    return result.status;\n  },\n\n  setCompleted: async(id, isComplete)=>{\n    const result = await axios.put(`/tasks/${id}`)\n    return {};\n  },\n\n  deleteTask:async(id)=>{\n    const result = await axios.delete(`/tasks/${id}`);\n    return result.status;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChDC,sBAAsB,CAAC,CAAC;AAExB,SAASC,eAAeA,CAACC,UAAU,EAAC;EAClCC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,UAAU,CAACG,KAAK,CAAC;EACtDL,sBAAsB,CAAC,CAAC;AAC1B;AAEA,SAASA,sBAAsBA,CAAA,EAAE;EAC/B,MAAMM,OAAO,GAAGH,YAAY,CAACI,OAAO,CAAC,cAAc,CAAC;EACpD,IAAGD,OAAO,EACRT,KAAK,CAACC,QAAQ,CAACU,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,OAAO,EAAE;AACxE;AAEAT,KAAK,CAACa,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAI;EACVE,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB,OAAOH,QAAQ;AAAA,CAAC,EAClBI,KAAK,IAAI;EACPF,OAAO,CAACC,GAAG,CAAC,4BAA4BC,KAAK,CAACC,MAAM,mBAAmBD,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACE,OAAO,EAAE,CAAC;EACzG;AACF,CAAC,CAAC;AAIN,eAAe;EACbC,MAAM,EAAEA,CAAA,KAAM;IACZf,YAAY,CAACC,OAAO,CAAC,cAAc,EAAC,EAAE,CAAC;EACzC,CAAC;EAEDe,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,QAAQ,EAAE;MAACH,QAAQ;MAAEC;IAAQ,CAAC,CAAC;IAC5DpB,eAAe,CAACqB,GAAG,CAACE,IAAI,CAAC;EAC3B,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAOL,QAAQ,EAAEC,QAAQ,KAAK;IACtC,MAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,WAAW,EAAE;MAACH,QAAQ;MAAEC;IAAQ,CAAC,CAAC;IAC/DpB,eAAe,CAACqB,GAAG,CAACE,IAAI,CAAC;EAC3B,CAAC;EAEDE,YAAY,EAAEA,CAAA,KAAM;IAClB,MAAMrB,KAAK,GAAGF,YAAY,CAACI,OAAO,CAAC,cAAc,CAAC;IAClD,IAAGF,KAAK,EACN;EACJ,CAAC;EAEDsB,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,MAAM,CAACJ,IAAI;EACpB,CAAC;EAEDM,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpB,MAAMH,MAAM,GAAG,MAAM/B,KAAK,CAAC0B,IAAI,CAAC,QAAQ,EAACQ,IAAI,EAAG;MAC9CvB,OAAO,EAAE;QACL,cAAc,EAAE,YAAY,CAAE;MAClC;IACJ,CAAC,CAAC;IACA,OAAOoB,MAAM,CAACZ,MAAM;EACtB,CAAC;EAEDgB,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnC,MAAMN,MAAM,GAAG,MAAM/B,KAAK,CAACsC,GAAG,CAAC,UAAUF,EAAE,EAAE,CAAC;IAC9C,OAAO,CAAC,CAAC;EACX,CAAC;EAEDG,UAAU,EAAC,MAAMH,EAAE,IAAG;IACpB,MAAML,MAAM,GAAG,MAAM/B,KAAK,CAACwC,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;IACjD,OAAOL,MAAM,CAACZ,MAAM;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}