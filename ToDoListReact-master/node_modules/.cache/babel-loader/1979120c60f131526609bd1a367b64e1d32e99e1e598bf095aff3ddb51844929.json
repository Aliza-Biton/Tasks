{"ast":null,"code":"var _jsxFileName = \"D:\\\\limudim\\\\praktikod\\\\project_3 ToDoList\\\\ToDoListReact-master\\\\src\\\\Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tasks = () => {\n  _s();\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const user = service.getLoginUser();\n    alert();\n    if (user == null) {\n      navigate('/login'); // אם אין טוקן תקף, ננתב להתחברות\n    } else {\n      getTodos();\n    }\n  }, []);\n  async function logout() {\n    localStorage.removeItem(\"access_token\");\n    navigate('/');\n  }\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n  async function createTodo(e) {\n    if (!newTodo.trim()) {\n      alert(\"המשימה לא יכולה להיות ריקה!\");\n      return; // לא שולחים את הבקשה אם השדה ריק\n    }\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\"); //clear input\n    await getTodos(); //refresh tasks list (in order to see the new one)\n  }\n  async function updateCompleted(todo, isComplete) {\n    await service.setCompleted(todo.id, isComplete);\n    await getTodos(); //refresh tasks list (in order to see the updated one)\n  }\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos(); //refresh tasks list\n  }\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createTodo,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-todo\",\n          placeholder: \"Well, let's take on the day\",\n          value: newTodo,\n          onChange: e => setNewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"\\u05D4\\u05EA\\u05E0\\u05EA\\u05E7\\u05D5\\u05EA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      style: {\n        display: \"block\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: todos.map(todo => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: todo.isComplete ? \"completed\" : \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"view\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"toggle\",\n                type: \"checkbox\",\n                defaultChecked: todo.isComplete,\n                onChange: e => updateCompleted(todo, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: todo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"destroy\",\n                onClick: () => deleteTodo(todo.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"lJ+gKZ4m4qVpRYXWCWnZeRlUAcg=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","service","useNavigate","jsxDEV","_jsxDEV","Tasks","_s","newTodo","setNewTodo","todos","setTodos","navigate","user","getLoginUser","alert","getTodos","logout","localStorage","removeItem","getTasks","createTodo","e","trim","preventDefault","addTask","updateCompleted","todo","isComplete","setCompleted","id","deleteTodo","deleteTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","onClick","style","display","map","type","defaultChecked","checked","name","_c","$RefreshReg$"],"sources":["D:/limudim/praktikod/project_3 ToDoList/ToDoListReact-master/src/Task.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport service from './service.js';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Tasks = () => {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const user = service.getLoginUser(); \n    alert()\n    if (user == null) {\n      navigate('/login');  // אם אין טוקן תקף, ננתב להתחברות\n    } else {\n      getTodos();\n    }\n  }, []);\n\n  async function logout() {\n       localStorage.removeItem(\"access_token\");\n       navigate('/'); \n     }\n\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n\n  async function createTodo(e) {\n    if (!newTodo.trim()) {\n      alert(\"המשימה לא יכולה להיות ריקה!\");\n      return;  // לא שולחים את הבקשה אם השדה ריק\n    }\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\");//clear input\n    await getTodos();//refresh tasks list (in order to see the new one)\n  }\n\n  async function updateCompleted(todo, isComplete) {\n    await service.setCompleted(todo.id, isComplete);\n    await getTodos();//refresh tasks list (in order to see the updated one)\n  }\n\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos();//refresh tasks list\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={createTodo}>\n          <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n        </form>\n        <span>\n          <button onClick={logout}>התנתקות</button>\n        </span>\n      </header>\n      <section className=\"main\" style={{ display: \"block\" }}>\n        <ul className=\"todo-list\">\n          {todos.map(todo => {\n            return (\n              <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n                <div className=\"view\">\n                  <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\n                  <label>{todo.name}</label>\n                  <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </section >\n  );\n}\n\nexport default Tasks;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}